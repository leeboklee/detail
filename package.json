{
  "name": "detailpage",
  "version": "0.1.0",
  "private": true,
  "scripts": {
    "dev:isolated": "bash scripts/project-isolation.sh",
    "dev:auto-monitor": "node scripts/auto-server-monitor.js",
    "dev:auto-start": "node scripts/auto-start.js",
    "dev": "node scripts/wsl-dev.js 3900",
    "dev:quick": "node scripts/quick-start.js",
    "optimize": "node scripts/performance-optimizer.js",
    "dev:nodemon": "nodemon --watch . --exec 'npm run dev' --ignore .next --ignore node_modules",
    "dev:win": "next dev -p 3901",
    "dev:force": "node scripts/auto-browser-refresh.cjs --keep-open --force-kill",
    "dev:basic": "NODE_OPTIONS=\"--max-old-space-size=4096\" next dev -p 3900",
    "dev:turbo": "NODE_OPTIONS=\"--max-old-space-size=4096\" next dev -p 3900 --turbo",
    "dev:fast": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048\" NEXT_SKIP_LOCKFILE_CHECK=1 next dev -p 3900 --turbo",
    "dev:ultra": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048\" NEXT_SKIP_LOCKFILE_CHECK=1 next dev -p 3900 --turbo --experimental-turbo",
    "dev:ultra-fast": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192 --max-semi-space-size=512\" NEXT_TELEMETRY_DISABLED=1 next dev -p 3900 --turbo --no-lint --no-typecheck",
    "dev:max-speed": "cross-env NODE_OPTIONS=\"--max-old-space-size=16384 --max-semi-space-size=1024\" NEXT_TELEMETRY_DISABLED=1 NEXT_SHARP_PATH=0 next dev -p 3900 --turbo --no-lint --no-typecheck --no-optimize",
    "dev:lightning": "cross-env NODE_OPTIONS=\"--max-old-space-size=8192 --max-semi-space-size=512 --optimize-for-size\" NEXT_TELEMETRY_DISABLED=1 NEXT_SHARP_PATH=0 next dev -p 3900 --turbo --no-lint --no-typecheck --no-optimize --no-source-maps",
    "dev:auto": "node -e \"const os=require('os'); const isWSL = /microsoft/i.test(os.release()); console.log(isWSL ? 'WSL detected → dev:wsl' : 'Windows detected → dev:win'); process.exit(isWSL ? 42 : 24); \" || (exitCode=$?); if [ $exitCode -eq 42 ]; then bash scripts/wsl-dev.sh; else next dev -p 3900; fi",
    "dev:python": "python scripts/port-manager.py",
    "dev:browser": "python scripts/browser-port-manager.py",
    "dev:indestructible": "powershell -ExecutionPolicy Bypass -File scripts/indestructible-server.ps1",
    "dev:node-indestructible": "node scripts/node-indestructible-server.js",
    "dev:bash-indestructible": "bash scripts/git-bash-indestructible.sh",
    "dev:safe": "npm run kill-port && npm run dev",
    "dev:simple": "python scripts/simple-python-server.py",
    "server:python": "python -m http.server 3901",
    "pm2": "pm2 start ecosystem.config.cjs --no-daemon",
    "pm2:fg": "pm2 start ecosystem.config.cjs --no-daemon",
    "pm2:bg": "echo '백그라운드 실행은 지원하지 않습니다. 포그라운드로 실행됩니다.' && pm2 start ecosystem.config.cjs --no-daemon",
    "pm2:stop": "pm2 stop detail-app",
    "pm2:restart": "pm2 restart detail-app",
    "pm2:delete": "pm2 delete detail-app",
    "pm2:logs": "pm2 logs detail-app",
    "pm2:status": "pm2 status",
    "service:install": "node scripts/windows-service.js install",
    "service:start": "node scripts/windows-service.js start",
    "service:stop": "node scripts/windows-service.js stop",
    "service:uninstall": "node scripts/windows-service.js uninstall",
    "service:restart": "node scripts/windows-service.js restart",
    "service:status": "node scripts/windows-service.cjs status",
    "ai:start": "node scripts/ai-server-manager.cjs start",
    "ai:status": "node scripts/ai-server-manager.cjs status",
    "ai:restart": "node scripts/ai-server-manager.cjs restart",
    "ai:stop": "node scripts/ai-server-manager.cjs stop",
    "auto:start": "node scripts/simple-auto-restart.cjs",
    "monitor": "node scripts/real-time-error-monitor.js",
    "monitor:status": "node scripts/service-monitor.cjs status",
    "monitor:stop": "pkill -f 'real-time-error-monitor'",
    "monitor:restart": "node scripts/service-monitor.cjs restart",
    "port:get": "node scripts/port-config.cjs get",
    "docker:start": "node scripts/docker-monitor.cjs start",
    "docker:stop": "docker-compose down",
    "docker:restart": "docker-compose restart",
    "docker:status": "node scripts/docker-monitor.cjs status",
    "docker:monitor": "node scripts/docker-monitor.cjs monitor",
    "docker:build": "docker build -t detail-app .",
    "docker:run": "docker run -d --name detail-app -p 3901:3901 detail-app",
    "docker:compose:up": "docker-compose up -d",
    "docker:compose:down": "docker-compose down",
    "docker:compose:logs": "docker-compose logs -f",
    "docker:compose:restart": "docker-compose restart",
    "dev:debug": "cross-env NODE_OPTIONS=\"--max-old-space-size=2048 --inspect\" next dev -p 3900",
    "build": "next build",
    "build:analyze": "cross-env ANALYZE=true next build",
    "start": "next start -p 3900",
    "lint": "next lint --fix",
    "lint:check": "next lint",
    "type-check": "tsc --noEmit",
    "clean": "rimraf .next node_modules/.cache",
    "clean:all": "rimraf .next node_modules/.cache dist coverage test-results playwright-report",
    "reset": "npm run clean && npm install && npm run dev",
    "kill-port": "scripts/kill-port-safe.sh",
    "db:generate": "prisma generate",
    "db:push": "prisma db push",
    "db:studio": "prisma studio",
    "db:reset": "prisma migrate reset --force",
    "db:seed": "node --input-type=module prisma/seed.js",
    "test": "vitest",
    "test:run": "vitest run",
    "test:e2e": "playwright test",
    "test:e2e:ui": "playwright test --ui",
    "test:e2e:debug": "playwright test --debug",
    "test:coverage": "vitest run --coverage",
    "predev": "prisma generate",
    "analyze": "cross-env ANALYZE=true npm run build",
    "check-deps": "npm outdated",
    "update-deps": "npm update",
    "cleanup": "node scripts/cleanup_logs.js",
    "monitor-errors": "node scripts/monitoring/monitor-errors.js",
    "error-monitor": "node scripts/error-monitor.js",
    "test:booking": "node scripts/test-booking-simple.js",
    "test:booking:full": "node scripts/test-booking-preview.js",
    "test:booking:basic": "node scripts/test-booking-basic.js",
    "start:background": "bash scripts/background-runner.sh",
    "monitor:auto": "node scripts/auto-monitor.js",
    "start:simple": "bash scripts/simple-background.sh",
    "video:cleanup": "node scripts/video-cleanup.js",
    "video:cleanup:schedule": "node scripts/video-cleanup.js --schedule",
    "test:auto": "node scripts/auto-debug-runner.js",
    "dev:no-browser": "node scripts/server-stability.js",
    "browser:open": "node scripts/auto-browser-opener.js",
    "browser:admin": "node scripts/auto-browser-opener.js admin",
    "dev:docker": "docker-compose up --watch",
    "dev:docker:build": "docker-compose up --build --watch",
    "docker:logs": "docker-compose logs -f",
    "docker:auto": "node scripts/docker-auto-manager.js",
    "dev:foreground": "powershell -ExecutionPolicy Bypass -File scripts/background-server.ps1",
    "auto-fix": "node scripts/auto-error-fixer.js",
    "monitor:browser": "node scripts/browser-error-monitor.js",
    "health": "curl -s http://localhost:3900/api/health",
    "server:kill": "taskkill //F //IM node.exe",
    "cache:clear": "rm -rf .next/cache && rm -rf node_modules/.cache",
    "cache:clean": "npm run cache:clear && npm install",
    "logs:view": "cat logs/real-time-errors.json",
    "logs:clear": "rm -rf logs/*.json",
    "debug:start": "npm run dev & sleep 5 && npm run monitor",
    "debug:full": "npm run cache:clear && npm run dev & sleep 10 && npm run monitor",
    "dev:wsl": "bash scripts/wsl-dev.sh",
    "dev:fg": "bash scripts/wsl-dev.sh --fg",
    "dev:tmux:start": "tmux new-session -d -s detail 'bash scripts/wsl-dev.sh --fg'",
    "dev:tmux:attach": "tmux attach -t detail",
    "dev:tmux:stop": "tmux kill-session -t detail || true",
    "verify:wsl": "bash scripts/wsl-open-and-verify.sh /",
    "verify:headless": "node scripts/verify-headless.js"
  },
  "dependencies": {
    "@chakra-ui/icons": "^2.1.1",
    "@chakra-ui/react": "^2.8.2",
    "@emotion/react": "^11.14.0",
    "@emotion/styled": "^11.14.1",
    "@google/generative-ai": "^0.24.1",
    "@heroui/react": "^2.0.0",
    "@loadable/component": "^5.16.7",
    "@monaco-editor/react": "^4.7.0",
    "@neondatabase/serverless": "^1.0.0",
    "@prisma/client": "^6.13.0",
    "autoprefixer": "^10.4.21",
    "axios": "^1.6.8",
    "clsx": "^2.1.0",
    "critters": "^0.0.23",
    "cross-port-killer": "^1.4.0",
    "date-fns": "^4.1.0",
    "framer-motion": "^11.18.2",
    "immer": "^10.1.1",
    "lodash": "^4.17.21",
    "next": "^15.5.2",
    "node-fetch": "^3.3.2",
    "open": "^10.1.2",
    "pixelmatch": "^7.1.0",
    "pngjs": "^7.0.0",
    "postcss": "^8.5.6",
    "prisma": "^6.13.0",
    "react": "^19.1.1",
    "react-datepicker": "^8.4.0",
    "react-dom": "^19.1.1",
    "react-icons": "^5.5.0",
    "sharp": "^0.33.4",
    "socket.io": "^4.8.1",
    "socket.io-client": "^4.8.1",

    "styled-components": "^6.1.8",
    "tailwindcss": "^3.4.17",
    "tesseract.js": "^6.0.1",
    "uuid": "^9.0.1",
    "zustand": "^5.0.6"
  },
  "devDependencies": {
    "@next/bundle-analyzer": "14.2.5",
    "@playwright/test": "^1.54.2",
    "@testing-library/jest-dom": "^6.6.3",
    "@types/lodash": "^4.17.12",
    "@types/react": "^18.2.67",
    "@types/react-dom": "^18.2.22",
    "@types/uuid": "^9.0.8",
    "@vitejs/plugin-react": "^4.4.0",
    "backstopjs": "^6.3.1",
    "cors": "^2.8.5",
    "cross-env": "^7.0.3",
    "cypress": "^14.5.1",
    "dotenv": "^16.5.0",
    "eslint": "^8",
    "eslint-config-next": "14.0.0",
    "express": "^5.1.0",
    "fs-extra": "^11.3.0",
    "jsdom": "^26.1.0",
    "node-windows": "^1.0.0-beta.8",
    "nodemon": "^3.0.0",
    "pg": "^8.11.0",
    "playwright": "^1.51.1",
    "puppeteer": "^24.16.0",
    "rimraf": "^5.0.5",
    "vitest": "^3.1.2",
    "ws": "^8.18.3"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "browserslist": {
    "production": [
      ">0.3%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
