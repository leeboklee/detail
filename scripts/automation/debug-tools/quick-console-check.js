const { chromium } = require('@playwright/test');

async function quickConsoleCheck() {
  const browser = await chromium.launch({ headless: true });
  const page = await browser.newPage();
  
  const logs = [];
  const errors = [];
  
  page.on('console', msg => {
    logs.push({ type: msg.type(), text: msg.text() });
    if (msg.type() === 'error') errors.push(msg.text());
  });
  
  page.on('pageerror', error => {
    errors.push(`Page Error: ${error.message}`);
  });
  
  try {
    console.log('üîç Îπ†Î•∏ ÏΩòÏÜî Î°úÍ∑∏ ÌôïÏù∏ Ï§ë...');
    await page.goto('http://localhost:3900/detail', { 
      waitUntil: 'domcontentloaded',
      timeout: 15000 
    });
    
    // 2Ï¥à ÎåÄÍ∏∞
    await page.waitForTimeout(2000);
    
    console.log(`\nüìä Í≤∞Í≥º: ${logs.length}Í∞ú Î°úÍ∑∏, ${errors.length}Í∞ú Ïò§Î•ò`);
    
    if (errors.length > 0) {
      console.log('\n‚ùå Ïò§Î•ò Î™©Î°ù:');
      errors.forEach((error, i) => console.log(`${i+1}. ${error}`));
    } else {
      console.log('‚úÖ Ïò§Î•ò ÏóÜÏùå');
    }
    
    // Ï£ºÏöî Î°úÍ∑∏Îßå Ï∂úÎ†•
    const importantLogs = logs.filter(log => 
      log.type === 'error' || 
      log.type === 'warning' || 
      log.text.includes('error') || 
      log.text.includes('Error')
    );
    
    if (importantLogs.length > 0) {
      console.log('\n‚ö†Ô∏è Ï£ºÏöî Î°úÍ∑∏:');
      importantLogs.forEach(log => console.log(`[${log.type}] ${log.text}`));
    }
    
  } catch (error) {
    console.error('‚ùå Ïó∞Í≤∞ Ïò§Î•ò:', error.message);
  } finally {
    await browser.close();
  }
}

quickConsoleCheck(); 